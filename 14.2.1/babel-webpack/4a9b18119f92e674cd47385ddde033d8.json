{"ast":null,"code":"import _asyncToGenerator from \"/home/charles/Desktop/todo-list/Front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport axios from 'axios';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\n\nfunction TodosComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 5);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 6);\n    i0.ɵɵlistener(\"click\", function TodosComponent_div_4_Template_div_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const todo_r1 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.toggleDone(todo_r1.id));\n    });\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function TodosComponent_div_4_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const todo_r1 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.deleteTodo(todo_r1.id));\n    });\n    i0.ɵɵtext(6, \"Remove\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const todo_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    i0.ɵɵclassMapInterpolate1(\"todo \", todo_r1.Completed ? \"done\" : \"\", \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(todo_r1.Title);\n  }\n}\n\nexport class TodosComponent {\n  constructor() {\n    this.todos = [];\n    this.inputTodo = '';\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.todos = (yield axios.get('http://localhost:8000/', {\n        headers: {\n          'X-CSRFTOKEN': '3zf2mziv3lrY1zjcCpcV55KZLQGUUJliYdcCY646oqnBxGSkXhFAQcw3znZhT6tA'\n        }\n      })).data;\n    })();\n  }\n\n  toggleDone(id) {\n    const todo = this.todos.find(item => item.id === id);\n\n    if (todo && todo.Completed != null) {\n      todo.Completed = !todo?.Completed;\n    }\n\n    axios.put(`http://localhost:8000/${id}/`, todo);\n  }\n\n  deleteTodo(id) {\n    this.todos = this.todos.filter((todo, i) => todo.id !== id);\n    axios.delete('http://localhost:8000/delete/' + id, {\n      headers: {\n        'X-CSRFTOKEN': '3zf2mziv3lrY1zjcCpcV55KZLQGUUJliYdcCY646oqnBxGSkXhFAQcw3znZhT6tA'\n      }\n    });\n  }\n\n  addTodo() {\n    this.todos.push({\n      id: undefined,\n      Title: this.inputTodo,\n      Completed: false\n    });\n    axios.post('http://localhost:8000/create', {\n      Title: this.inputTodo,\n      Description: '',\n      Date: '2000-01-01'\n    }, {\n      headers: {\n        'X-CSRFTOKEN': '3zf2mziv3lrY1zjcCpcV55KZLQGUUJliYdcCY646oqnBxGSkXhFAQcw3znZhT6tA'\n      }\n    });\n    this.inputTodo = '';\n  }\n\n}\n\nTodosComponent.ɵfac = function TodosComponent_Factory(t) {\n  return new (t || TodosComponent)();\n};\n\nTodosComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TodosComponent,\n  selectors: [[\"app-todos\"]],\n  decls: 5,\n  vars: 2,\n  consts: [[1, \"todos\"], [3, \"submit\"], [\"type\", \"text\", \"name\", \" inputTodo\", \"placeholder\", \" - Enter todo...\", 1, \"todo-input\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \" submit\", \"value\", \" Add Todo\", 1, \"todo-submit\"], [3, \"class\", 4, \"ngFor\", \"ngForOf\"], [1, \"id\"], [1, \"content\", 3, \"click\"], [1, \"delete\", 3, \"click\"]],\n  template: function TodosComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"submit\", function TodosComponent_Template_form_submit_1_listener() {\n        return ctx.addTodo();\n      });\n      i0.ɵɵelementStart(2, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function TodosComponent_Template_input_ngModelChange_2_listener($event) {\n        return ctx.inputTodo = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, TodosComponent_div_4_Template, 7, 5, \"div\", 4);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.inputTodo);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.todos);\n    }\n  },\n  dependencies: [i1.NgForOf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm],\n  styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\tvar __webpack_modules__ = ({\\n\\n 400:\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/postcss-loader/dist/cjs.js):\\\\nSyntaxError\\\\n\\\\n(6:10) /home/charles/Desktop/todo-list/Front/src/app/components/todos/todos.component.css Unknown word\\\\n\\\\n \\\\u001b[90m 4 | \\\\u001b[39m    background-color\\\\u001b[33m:\\\\u001b[39m \\\\u001b[35m#fff\\\\u001b[39m\\\\u001b[33m;\\\\u001b[39m\\\\n \\\\u001b[90m 5 | \\\\u001b[39m    border-bottom\\\\u001b[33m:\\\\u001b[39m 10px solid \\\\u001b[35m#DDD\\\\u001b[39m\\\\u001b[33m;\\\\u001b[39m\\\\n\\\\u001b[1m\\\\u001b[31m>\\\\u001b[39m\\\\u001b[22m\\\\u001b[90m 6 | \\\\u001b[39m    font si\\\\u001b[33m:\\\\u001b[39m 10px\\\\u001b[33m;\\\\u001b[39m\\\\n \\\\u001b[90m   | \\\\u001b[39m         \\\\u001b[1m\\\\u001b[31m^\\\\u001b[39m\\\\u001b[22m\\\\n \\\\u001b[90m 7 | \\\\u001b[39m\\\\u001b[33m}\\\\u001b[39m\\\\n \\\\u001b[90m 8 | \\\\u001b[39m\\\\u001b[33m.todo\\\\u001b[39m\\\\u001b[33m:\\\\u001b[39m\\\\u001b[36mnth-child\\\\u001b[39m\\\\u001b[36m(even)\\\\u001b[39m\\\\u001b[33m{\\\\u001b[39m\\\\n\\\");\\n\\n })\\n\\n \\t});\\n\\n \\t\\n \\t// startup\\n \\t// Load entry module and return exports\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n \\tvar __webpack_exports__ = {};\\n \\t__webpack_modules__[400]();\\n \\tresource = __webpack_exports__;\\n \\t\\n })()\\n;\\n/*# sourceMappingURL=todos.component.css.map*/\"]\n});","map":{"version":3,"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;;ICWIC,4BAAiG,CAAjG,EAAiG,KAAjG,EAAiG,CAAjG;IACoBA;IAAOA;IACvBA;IAAqBA;MAAA;MAAA;MAAA;MAAA,OAASA,6CAAT;IAA4B,CAA5B;IAA8BA;IAAgBA;IACnEA;IAAyBA;MAAA;MAAA;MAAA;MAAA,OAASA,6CAAT;IAA4B,CAA5B;IAA8BA;IAAMA;;;;;;IAHjBA;IAC5BA;IAAAA;IACmCA;IAAAA;;;;ADL3D,OAAM,MAAOC,cAAP,CAAqB;EAKzBC;IAJA,aAAgB,EAAhB;IAEA,iBAAoB,EAApB;EAEgB;;EAEVC,QAAQ;IAAA;;IAAA;MACZ,KAAI,CAACC,KAAL,GAAa,OAAOL,KAAK,CAACM,GAAN,CAAU,wBAAV,EAAoC;QACtDC,OAAO,EAAE;UACP,eACE;QAFK;MAD6C,CAApC,CAAP,EAKTC,IALJ;IADY;EAOb;;EACDC,UAAU,CAACC,EAAD,EAAuB;IAC/B,MAAMC,IAAI,GAAG,KAAKN,KAAL,CAAWO,IAAX,CAAgBC,IAAI,IAAIA,IAAI,CAACH,EAAL,KAAYA,EAApC,CAAb;;IACA,IAAGC,IAAI,IAAIA,IAAI,CAACG,SAAL,IAAkB,IAA7B,EAAmC;MACjCH,IAAI,CAACG,SAAL,GAAiB,CAACH,IAAI,EAAEG,SAAxB;IACD;;IAEDd,KAAK,CAACe,GAAN,CAAW,yBAAyBL,EAAE,GAAtC,EAA2CC,IAA3C;EACD;;EACDK,UAAU,CAACN,EAAD,EAAuB;IAC/B,KAAKL,KAAL,GAAa,KAAKA,KAAL,CAAWY,MAAX,CAAkB,CAACN,IAAD,EAAOO,CAAP,KAAaP,IAAI,CAACD,EAAL,KAAYA,EAA3C,CAAb;IACAV,KAAK,CAACmB,MAAN,CAAa,kCAAkCT,EAA/C,EAAmD;MACjDH,OAAO,EAAE;QACP,eACE;MAFK;IADwC,CAAnD;EAMD;;EAEDa,OAAO;IACL,KAAKf,KAAL,CAAWgB,IAAX,CAAgB;MACdX,EAAE,EAAEY,SADU;MAEdC,KAAK,EAAE,KAAKC,SAFE;MAGdV,SAAS,EAAE;IAHG,CAAhB;IAKAd,KAAK,CAACyB,IAAN,CACE,8BADF,EAEE;MACEF,KAAK,EAAE,KAAKC,SADd;MAEEE,WAAW,EAAE,EAFf;MAGEC,IAAI,EAAE;IAHR,CAFF,EAOE;MACEpB,OAAO,EAAE;QACP,eACE;MAFK;IADX,CAPF;IAcA,KAAKiB,SAAL,GAAiB,EAAjB;EACD;;AAtDwB;;;mBAAdtB;AAAc;;;QAAdA;EAAc0B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCT3B/B,+BAAoB,CAApB,EAAoB,MAApB,EAAoB,CAApB;MACUA;QAAA,OAAYgC,aAAZ;MAAqB,CAArB;MACFhC;MAKAA;QAAA;MAAA;MALAA;MAOAA;MACJA;MAEAA;MAKJA;;;;MAVQA;MAAAA;MAKmBA;MAAAA","names":["axios","i0","TodosComponent","constructor","ngOnInit","todos","get","headers","data","toggleDone","id","todo","find","item","Completed","put","deleteTodo","filter","i","delete","addTodo","push","undefined","Title","inputTodo","post","Description","Date","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/charles/Desktop/todo-list/Front/src/app/components/todos/todos.component.ts","/home/charles/Desktop/todo-list/Front/src/app/components/todos/todos.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport axios from 'axios';\nimport { Todo } from '../../models/Todo';\n\n@Component({\n  selector: 'app-todos',\n  templateUrl: './todos.component.html',\n  styleUrls: ['./todos.component.css'],\n})\nexport class TodosComponent implements OnInit {\n  todos: Todo[] = [];\n\n  inputTodo: string = '';\n\n  constructor() {}\n\n  async ngOnInit() {\n    this.todos = (await axios.get('http://localhost:8000/', {\n      headers: {\n        'X-CSRFTOKEN':\n          '3zf2mziv3lrY1zjcCpcV55KZLQGUUJliYdcCY646oqnBxGSkXhFAQcw3znZhT6tA',\n      },\n    })).data;\n  }\n  toggleDone(id: Number | undefined) {\n    const todo = this.todos.find(item => item.id === id);\n    if(todo && todo.Completed != null) {\n      todo.Completed = !todo?.Completed\n    }\n    \n    axios.put (`http://localhost:8000/${id}/`, todo)\n  }\n  deleteTodo(id: Number | undefined) {\n    this.todos = this.todos.filter((todo, i) => todo.id !== id);\n    axios.delete('http://localhost:8000/delete/' + id, {\n      headers: {\n        'X-CSRFTOKEN':\n          '3zf2mziv3lrY1zjcCpcV55KZLQGUUJliYdcCY646oqnBxGSkXhFAQcw3znZhT6tA',\n      },\n    });\n  }\n\n  addTodo() {\n    this.todos.push({\n      id: undefined,\n      Title: this.inputTodo,\n      Completed: false,\n    });\n    axios.post(\n      'http://localhost:8000/create',\n      {\n        Title: this.inputTodo,\n        Description: '',\n        Date: '2000-01-01',\n      },\n      {\n        headers: {\n          'X-CSRFTOKEN':\n            '3zf2mziv3lrY1zjcCpcV55KZLQGUUJliYdcCY646oqnBxGSkXhFAQcw3znZhT6tA',\n        },\n      }\n    );\n    this.inputTodo = '';\n  }\n}\n","<div class =\"todos\">\n    <form (submit) = \"addTodo()\">\n        <input\n        type=\"text\"\n        name=\" inputTodo\"\n        placeholder=\" - Enter todo...\"\n        class=\"todo-input\"\n        [(ngModel)]=\"inputTodo\"\n        />\n        <input type=\" submit\" value=\" Add Todo\" class=\" todo-submit\">\n    </form>\n\n    <div  *ngFor=\"let todo of todos; let i = index;\"class = \"todo {{(todo.Completed ?'done': '') }}\">\n        <div class=\"id\">{{ i }}</div>\n        <div class=\"content\" (click)=\"toggleDone(todo.id)\">{{ todo.Title }}</div>\n        <button class = \"delete\" (click)=\"deleteTodo(todo.id)\">Remove</button>\n    </div>\n</div>\n\n"]},"metadata":{},"sourceType":"module"}